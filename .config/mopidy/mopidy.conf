# For further information about options in this file see:
#   https://docs.mopidy.com/
#
# The initial commented out values reflect the defaults as of:
#   Mopidy 4.0.0a2
#   Mopidy-File 4.0.0a2
#   Mopidy-HTTP 4.0.0a2
#   Mopidy-M3U 4.0.0a2
#   Mopidy-MPD 3.3.0
#   Mopidy-SoftwareMixer 4.0.0a2
#   Mopidy-Stream 4.0.0a2
#
# Available options and defaults might have changed since then,
# run `mopidy config` to see the current effective config and
# `mopidy --version` to check the current version.

[core]
#cache_dir = $XDG_CACHE_DIR/mopidy
#config_dir = $XDG_CONFIG_DIR/mopidy
#data_dir = $XDG_DATA_DIR/mopidy
#max_tracklist_length = 10000
restore_state = true

[logging]
verbosity = 1
format = %(levelname)-8s %(asctime)s [%(process)d:%(threadName)s] %(name)s\n  %(message)s
color = true
#config_file = 

[audio]
#mixer = software
#mixer_volume = 
#output = autoaudiosink
#buffer_time = 

# [proxy]
#scheme = 
#hostname = 
#port = 
#username = 
#password = 

[mpd]
enabled = true
hostname = 127.0.0.1
port = 6600
#password = 
max_connections = 20
#connection_timeout = 60
zeroconf = Mopidy MPD server on $hostname
#command_blacklist = 
#  listall
#  listallinfo
default_playlist_scheme = m3u

[file]
enabled = true
media_dirs = 
  $XDG_MUSIC_DIR|Musica
#  ~/|Home
#excluded_file_extensions = 
#  .directory
#  .html
#  .jpeg
#  .jpg
#  .log
#  .nfo
#  .pdf
#  .png
#  .txt
#  .zip
#show_dotfiles = false
#follow_symlinks = false
#metadata_timeout = 1000

#[http]
#enabled = true
#hostname = 127.0.0.1
#port = 6680
#zeroconf = Mopidy HTTP server on $hostname
#allowed_origins = 
#csrf_protection = true
#default_app = mopidy

[m3u]
enabled = true
base_dir = $XDG_MUSIC_DIR
#default_encoding = latin-1
#default_extension = .m3u8
playlists_dir = $XDG_MUSIC_DIR/Playlists

[softwaremixer]
#enabled = true

[stream]
#enabled = true
#protocols = 
#  http
#  https
#  mms
#  rtmp
#  rtmps
#  rtsp
#metadata_blacklist = 
#timeout = 5000

# INFO: The problem is authentication:
# ytmusic will try to get the user trought ytAPI and
# with `youtube_music.list_channelplaylists` will throw an error
# with the message saying to authenticate before using the function.
# The Auth process works with browser cookie session being loaded in the `Music`
# class in `youtube_music.py:36` -> `Music::YTMusic::__init__(self, auth, requests_session)` 
# the class will dump the headers and pass the cookie trought `auth`.
# Although the `ytmusicapi` wiki says it's fine to auth like this, the program excepts an `oauth_credential`
# passed in the constructor. This can be obtained in the google cloud services in the same tab used for the
# YouTubeAPI Key in the OAuth section.
# The problem remains the lack of knowledge for starting the server manually or if build is neeed.
# Will investigate more on the topic whilst I read the documentation for `ytmusicapi`.
# Config can be found in the `config.py` file.
[youtube]
enabled = true
youtube_dl_package = yt_dlp
allow_cache = true
youtube_api_key = AIzaSyBDOMj0RrKU-ur2BnCWf40cR2HA4ojAvCM
api_enabled = true
musicapi_enabled = true
channel_id = UCY_S-jaQdRdjyRVhGFEXv_w
autoplay_enabled = true
